Results	Entity	Line	Column	CheckID	Check Name	Ignored	Note
Number of Results: 1080							
/home/gabriele/projects/ninvaders-0.1.1/aliens.c							
Non unique external identifier level conflicts with entity level in file nInvaders.h on line 50	level	37	12	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
"Violation: basic numerical type """"int"""" used."	i	34	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	j	34	14	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used in """"int [5][10]""""."	level	37	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function aliensReset"	aliensReset	32	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Non distinct external identifier bunkersReset conflicts with entity bunkersClear in file view.c	bunkersReset	79	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier bunkersReset conflicts with entity bunkersHitCheck in file aliens.c	bunkersReset	79	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier bunkersReset conflicts with entity bunkersDisplay in file view.c	bunkersReset	79	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier bunkersReset conflicts with entity bunkersClearElement in file view.c	bunkersReset	79	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier bunkersReset conflicts with entity bunkersRefresh in file aliens.h	bunkersReset	79	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
"Keyword """"void"""" not used to denote empty parameter list for function bunkersReset"	bunkersReset	79	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	a	81	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	b	81	15	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"char"""" used in """"char [4][81]""""."	bunkerd	85	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Iteration-statement or selection-statement not a compound-statement	bunkersReset	97	24	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Iteration-statement or selection-statement not a compound-statement	bunkersReset	99	24	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
"Violation: basic numerical type """"int"""" used."	aliensMove	112	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function aliensMove"	aliensMove	112	4	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	cx	115	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	cy	115	15	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	fReachedPlayer	116	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function render"	render	156	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	k	158	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	row	158	14	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	c	159	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Non distinct external identifier aliensMissileMove conflicts with entity aliensMove in file aliens.c	aliensMissileMove	199	4	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliensMissileMove conflicts with entity aliensReset in file aliens.c	aliensMissileMove	199	4	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliensMissileMove conflicts with entity aliensClear in file view.c	aliensMissileMove	199	4	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliensMissileMove conflicts with entity aliensDisplay in file view.c	aliensMissileMove	199	4	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliensMissileMove conflicts with entity aliensMissileClear in file view.c	aliensMissileMove	199	4	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliensMissileMove conflicts with entity aliensMissileDisplay in file view.c	aliensMissileMove	199	4	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliensMissileMove conflicts with entity aliensRefresh in file view.c	aliensMissileMove	199	4	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliensMissileMove conflicts with entity aliensHitCheck in file aliens.c	aliensMissileMove	199	4	MISRA12_5.1	5.1 External identifiers shall be distinct		
"Violation: basic numerical type """"int"""" used."	aliensMissileMove	199	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function aliensMissileMove"	aliensMissileMove	199	4	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	i	201	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	tmp	201	15	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	fPlayerWasHit	202	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shootThreshold	203	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	alienshot_counter	204	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Identifier random, does not have a definition	random	239	38	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
"Violation: basic numerical type """"int"""" used."	aliensHitCheck	269	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shotx	269	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shoty	269	34	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	alienType	271	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shipx	272	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shipy	272	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	bunkersHitCheck	291	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shotx	291	24	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shoty	291	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	adjx	293	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	adjy	293	18	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	fBunkerWasHit	294	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
/home/gabriele/projects/ninvaders-0.1.1/aliens.h							
Non distinct external identifier Aliens conflicts with entity Aliens in file aliens.h	Aliens	30	15	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliens conflicts with entity alienshotnum in file aliens.h	aliens	41	7	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliens conflicts with entity alienshotx in file aliens.h	aliens	41	7	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier aliens conflicts with entity alienshoty in file aliens.h	aliens	41	7	MISRA12_5.1	5.1 External identifiers shall be distinct		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
Include guards not used in file		25	1	MISRA12_4.10	Directive 4.10 Precautions shall be taken in order to prevent the contents of a header file being included more than once		
Identifier is typographically ambiguous to Aliens	aliens	41	7	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
"Violation: basic numerical type """"int"""" used."	shipnum	43	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	posX	33	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	posY	34	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	right	35	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	left	36	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	bottom	37	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	speed	38	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function aliens, has external linkage but no visible declaration	aliens	41	7	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function shipnum, has external linkage but no visible declaration	shipnum	43	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object lowest_ship, has external linkage but is only used in the translation unit built from aliens.c.	lowest_ship	50	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"Violation: basic numerical type """"int"""" used in """"int [10]""""."	lowest_ship	50	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function lowest_ship, has external linkage but no visible declaration	lowest_ship	50	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object alienshotx, has external linkage but is only used in the translation unit built from aliens.c.	alienshotx	51	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"Violation: basic numerical type """"int"""" used in """"int [10]""""."	alienshotx	51	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function alienshotx, has external linkage but no visible declaration	alienshotx	51	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object alienshoty, has external linkage but is only used in the translation unit built from aliens.c.	alienshoty	52	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"Violation: basic numerical type """"int"""" used in """"int [10]""""."	alienshoty	52	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function alienshoty, has external linkage but no visible declaration	alienshoty	52	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object alienshotnum, has external linkage but is only used in the translation unit built from aliens.c.	alienshotnum	53	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"Violation: basic numerical type """"int"""" used."	alienshotnum	53	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function alienshotnum, has external linkage but no visible declaration	alienshotnum	53	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
alienshotnum is only used in a single function and should be defined at block scope.	alienshotnum	53	4	MISRA12_8.9	8.9 An object should be defined at block scope if its identifier only appears in a single function		
Function or object alienBlock, has external linkage but is only used in the translation unit built from aliens.c.	alienBlock	54	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"Violation: basic numerical type """"int"""" used in """"int [5][10]""""."	alienBlock	54	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function alienBlock, has external linkage but no visible declaration	alienBlock	54	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object bunker, has external linkage but is only used in the translation unit built from aliens.c.	bunker	56	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"Violation: basic numerical type """"int"""" used in """"int [4][81]""""."	bunker	56	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function bunker, has external linkage but no visible declaration	bunker	56	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
"Keyword """"void"""" not used to denote empty parameter list for function aliensReset"	aliensReset	59	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function bunkersReset"	bunkersReset	60	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	aliensMove	61	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function aliensMove"	aliensMove	61	4	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	aliensMissileMove	62	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function aliensMissileMove"	aliensMissileMove	62	4	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function render"	render	63	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	aliensHitCheck	64	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shotx	64	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shoty	64	34	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	bunkersHitCheck	65	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shotx	65	24	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shoty	65	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function aliensDisplay, has more than one declaration	aliensDisplay	69	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Violation: basic numerical type """"int"""" used."	x	69	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	69	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	wid	69	44	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hgt	69	53	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function aliensClear, has more than one declaration	aliensClear	70	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Violation: basic numerical type """"int"""" used."	x	70	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	70	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	wid	70	42	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hgt	70	51	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function aliensRefresh, has more than one declaration	aliensRefresh	71	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Violation: basic numerical type """"int"""" used."	level	71	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used in """"int *""""."	pAliens	71	42	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function aliensMissileDisplay, has more than one declaration	aliensMissileDisplay	72	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Violation: basic numerical type """"int"""" used."	x	72	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	72	44	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function aliensMissileClear, has more than one declaration	aliensMissileClear	73	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Violation: basic numerical type """"int"""" used."	x	73	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	73	42	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function bunkersClearElement, has more than one declaration	bunkersClearElement	74	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Violation: basic numerical type """"int"""" used."	x	74	36	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	74	43	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function bunkersClear, has more than one declaration	bunkersClear	75	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Keyword """"void"""" not used to denote empty parameter list for function bunkersClear"	bunkersClear	75	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Identifier bunkersRefresh, does not have a definition	bunkersRefresh	76	12	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
"Keyword """"void"""" not used to denote empty parameter list for function bunkersRefresh"	bunkersRefresh	76	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
/home/gabriele/projects/ninvaders-0.1.1/globals.c							
Identifier usleep, does not have a definition	usleep	46	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	doSleep	46	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
"Violation: basic numerical type """"int"""" used."	microseconds	44	17	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function showVersion"	showVersion	53	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	showVersion	55	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showVersion	56	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showVersion	57	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showVersion	58	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showVersion	59	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showVersion	60	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showVersion	61	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function showUsage"	showUsage	68	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	showUsage	71	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showUsage	72	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showUsage	73	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showUsage	74	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showUsage	75	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Function or object waitForReturn, has external linkage but is only used in the translation unit built from globals.c.	waitForReturn	82	5	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Function """"waitForReturn"""" appears to have internal linkage within globals.c, so static keyword should be used."	waitForReturn	82	5	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"Keyword """"void"""" not used to denote empty parameter list for function waitForReturn"	waitForReturn	82	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function waitForReturn, has external linkage but no visible declaration	waitForReturn	82	5	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
"Violation: basic numerical type """"char"""" used in """"char [2]""""."	b	84	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	waitForReturn	85	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier fgets, does not have a definition	fgets	86	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	waitForReturn	86	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function showGplShort"	showGplShort	92	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	showGplShort	94	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	95	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	96	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	97	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	98	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	99	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	100	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	101	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	102	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	103	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	104	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	105	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	106	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	107	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	108	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	109	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	110	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGplShort	111	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Non distinct external identifier showGpl conflicts with entity showGplShort in file globals.c	showGpl	117	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
"Keyword """"void"""" not used to denote empty parameter list for function showGpl"	showGpl	117	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	showGpl	119	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	120	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	121	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	122	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	123	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	124	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	125	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	126	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	127	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	128	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	129	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	130	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	131	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	132	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	133	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	134	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	135	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	136	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	137	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	138	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	139	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	140	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	141	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	142	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	143	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	147	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	148	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	149	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	150	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	151	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	152	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	153	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	154	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	155	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	156	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	157	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	158	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	159	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	160	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	161	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	162	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	163	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	164	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	165	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	166	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	167	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	168	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	169	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	170	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	174	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	175	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	176	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	177	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	178	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	179	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	180	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	181	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	182	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	183	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	184	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	185	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	186	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	187	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	188	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	189	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	190	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	191	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	192	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	193	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	194	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	195	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	196	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	197	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	198	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	202	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	203	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	204	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	205	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	206	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	207	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	208	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	209	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	210	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	211	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	212	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	213	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	214	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	215	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	216	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	217	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	218	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	219	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	220	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	221	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	222	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	223	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	224	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	225	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	226	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	230	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	231	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	232	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	233	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	234	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	235	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	236	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	237	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	238	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	239	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	240	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	241	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	242	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	243	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	244	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	245	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	246	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	247	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	248	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	249	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	250	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	251	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	252	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	253	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	254	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	258	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	259	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	260	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	261	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	262	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	263	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	264	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	265	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	266	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	267	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	268	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	269	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	270	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	271	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	272	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	273	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	274	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	275	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	276	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	277	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	278	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	279	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	280	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	281	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	282	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	286	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	287	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	288	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	289	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	290	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	291	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	292	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	293	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	294	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	295	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	296	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	297	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	298	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	299	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	300	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	301	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	302	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	303	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	304	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	305	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	306	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	307	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	308	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	309	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	310	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	314	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	315	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	316	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	317	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	318	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	319	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	320	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	321	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	322	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	323	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	324	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	325	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	326	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	327	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	328	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	329	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	330	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	331	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	332	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	333	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	334	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	335	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	336	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	337	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	338	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	342	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	343	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	344	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	345	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	346	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	347	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	348	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	349	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	350	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	351	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	352	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	353	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	354	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	355	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	356	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	357	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	358	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	359	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	360	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	361	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	362	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	363	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	364	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	365	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	366	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	370	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	371	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	372	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	373	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	374	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	375	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	376	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	377	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	378	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	379	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	380	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	381	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	382	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	383	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	384	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	385	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	386	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	387	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	388	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	389	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	390	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	391	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	392	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	393	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	394	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	398	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	399	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	400	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	401	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	402	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	403	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	404	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	405	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	406	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	407	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	408	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	409	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	410	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	411	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	412	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	413	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	414	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	415	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	416	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	417	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	418	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	419	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	420	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	421	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	422	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	426	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	427	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	428	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	429	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	430	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	431	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	432	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	433	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	434	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	435	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	436	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	437	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	438	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	439	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	440	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	441	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	442	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	443	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	444	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	445	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	446	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	447	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	448	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	449	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	450	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	454	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	455	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	456	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	457	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	458	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	459	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	460	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	461	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	462	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	463	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	464	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	465	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	466	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	467	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	468	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	469	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	470	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	471	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	472	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	473	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	474	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	475	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	476	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	477	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	478	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	482	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	483	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	484	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	485	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	486	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	487	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	488	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	489	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	490	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	491	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	492	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	493	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	494	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	495	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	496	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	497	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	498	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	499	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	500	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	501	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	502	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	503	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	504	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	505	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	506	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	510	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	511	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	512	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	513	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	514	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	515	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	516	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	517	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	518	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	519	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	520	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	521	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	522	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	523	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	524	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	525	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	showGpl	526	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
/home/gabriele/projects/ninvaders-0.1.1/globals.h							
Declaration or Definition of doSleep is not compatible with another declaration or definition in file globals.c on line 44	doSleep	28	12	MISRA12_8.3	8.3 All declarations of an object or function shall use the same names and type qualifiers		
Object or function showGpl, has more than one declaration	showGpl	33	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Object or function showGplShort, has more than one declaration	showGplShort	32	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Object or function showUsage, has more than one declaration	showUsage	30	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Object or function showVersion, has more than one declaration	showVersion	31	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Object or function doSleep, has more than one declaration	doSleep	28	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
Improper parameter format for function doSleep; each parameter must have a type and a name	doSleep	28	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function showUsage"	showUsage	30	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function showVersion"	showVersion	31	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function showGplShort"	showGplShort	32	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function showGpl"	showGpl	33	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
/home/gabriele/projects/ninvaders-0.1.1/nInvaders.c							
Function or object lives, has external linkage but is only used in the translation unit built from nInvaders.c.	lives	35	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Function or object score, has external linkage but is only used in the translation unit built from nInvaders.c.	score	36	5	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Function or object status, has external linkage but is only used in the translation unit built from nInvaders.c.	status	37	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Global Object """"lives"""" appears to have internal linkage within nInvaders.c, so static keyword should be used."	lives	35	4	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"C Global Object """"score"""" appears to have internal linkage within nInvaders.c, so static keyword should be used."	score	36	5	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"C Global Object """"status"""" appears to have internal linkage within nInvaders.c, so static keyword should be used."	status	37	4	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
time.h used	stdio.h	25	0	MISRA12_21.10	21.10 The Standard Library time and date functions shall not be used		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
"Violation: basic numerical type """"int"""" used."	lives	35	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"long"""" used."	score	36	5	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	status	37	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Object or function lives, has external linkage but no visible declaration	lives	35	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function score, has external linkage but no visible declaration	score	36	5	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function status, has external linkage but no visible declaration	status	37	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
"Keyword """"void"""" not used to denote empty parameter list for function initLevel"	initLevel	52	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	argc	66	36	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"char"""" used in """"char **""""."	argv	66	49	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Identifier strcmp, does not have a definition	strcmp	70	25	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Parameter argc is modified	evaluateCommandLine	74	24	MISRA12_17.8	17.8 A function parameter should not be modified		
Identifier exit, does not have a definition	exit	87	16	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
cstdlib function exit used in file nInvaders.c	exit	87	16	MISRA12_21.8	21.8 The library functions abort, exit, getenv and system of <stdlib.h> shall not be used		
Non unique internal identifier finish conflicts with entity finish in file view.c on line 548	finish	92	12	MISRA12_5.9	5.9 Identifiers that define objects or functions with internal linkage should be unique		
Unused unused parameter sig	sig	92	23	MISRA12_2.7	2.7 There should be no unused parameters in functions		
"Violation: basic numerical type """"int"""" used."	sig	92	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Identifier endwin, does not have a definition	endwin	94	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	finish	94	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier fprintf, does not have a definition	fprintf	97	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	finish	97	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	finish	98	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	finish	99	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	finish	100	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	finish	102	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Iteration-statement or selection-statement not a compound-statement	finish	103	8	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Discarded Return Values	finish	104	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Iteration-statement or selection-statement not a compound-statement	finish	105	8	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Discarded Return Values	finish	106	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Iteration-statement or selection-statement not a compound-statement	finish	107	8	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Discarded Return Values	finish	108	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Iteration-statement or selection-statement not a compound-statement	finish	109	8	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Discarded Return Values	finish	110	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Iteration-statement or selection-statement not a compound-statement	finish	111	8	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Discarded Return Values	finish	112	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Iteration-statement or selection-statement not a compound-statement	finish	113	8	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Discarded Return Values	finish	114	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Iteration-statement or selection-statement not a compound-statement	finish	115	8	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Discarded Return Values	finish	116	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Iteration-statement or selection-statement not a compound-statement	finish	117	8	MISRA12_15.6	15.6 The body of an iteration-statement or a selection-statement shall be a compound-statement		
Discarded Return Values	finish	118	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Else If with no following Else	finish	120	8	MISRA12_15.7	15.7 All if … else if constructs shall be terminated with an else statement		
Function or object drawscore, has external linkage but is only used in the translation unit built from nInvaders.c.	drawscore	125	5	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"Keyword """"void"""" not used to denote empty parameter list for function drawscore"	drawscore	125	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Function or object readInput, has external linkage but is only used in the translation unit built from nInvaders.c.	readInput	134	5	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Function """"readInput"""" appears to have internal linkage within nInvaders.c, so static keyword should be used."	readInput	134	5	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"Keyword """"void"""" not used to denote empty parameter list for function readInput"	readInput	134	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function readInput, has external linkage but no visible declaration	readInput	134	5	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
"Violation: basic numerical type """"int"""" used."	ch	136	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	lastmove	137	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Identifier wgetch, does not have a definition	wgetch	139	13	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Else If with no following Else	readInput	161	16	MISRA12_15.7	15.7 All if … else if constructs shall be terminated with an else statement		
Unconditional throw or break statement does not terminate non-empty switch-clause.	readInput	175	24	MISRA12_16.3	16.3 An unconditional break statement shall terminate every switch-clause		
Function or object handleTimer, has external linkage but is only used in the translation unit built from nInvaders.c.	handleTimer	209	5	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Function """"handleTimer"""" appears to have internal linkage within nInvaders.c, so static keyword should be used."	handleTimer	209	5	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"Keyword """"void"""" not used to denote empty parameter list for function handleTimer"	handleTimer	209	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function handleTimer, has external linkage but no visible declaration	handleTimer	209	5	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
"Violation: basic numerical type """"int"""" used."	aliens_move_counter	211	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	aliens_shot_counter	212	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	player_shot_counter	213	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	ufo_move_counter	214	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	title_animation_counter	215	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	game_over_counter	216	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Improper '++' declaration.		222	23	MISRA12_13.3	13.3 A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator		
Unconditional throw or break statement does not terminate non-empty switch-clause.	handleTimer	235	16	MISRA12_16.3	16.3 An unconditional break statement shall terminate every switch-clause		
Improper '++' declaration.		272	42	MISRA12_13.3	13.3 A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator		
Improper '++' declaration.		273	42	MISRA12_13.3	13.3 A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator		
Improper '++' declaration.		274	42	MISRA12_13.3	13.3 A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator		
Improper '++' declaration.		275	39	MISRA12_13.3	13.3 A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator		
Improper '++' declaration.		303	46	MISRA12_13.3	13.3 A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator		
Switch Incorrect: No default case	handleTimer	306	8	MISRA12_16.4	16.4 Every switch statement shall have a default label		
Function or object setUpTimer, has external linkage but is only used in the translation unit built from nInvaders.c.	setUpTimer	313	5	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Function """"setUpTimer"""" appears to have internal linkage within nInvaders.c, so static keyword should be used."	setUpTimer	313	5	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"Keyword """"void"""" not used to denote empty parameter list for function setUpTimer"	setUpTimer	313	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function setUpTimer, has external linkage but no visible declaration	setUpTimer	313	5	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Identifier setitimer, does not have a definition	setitimer	321	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	setUpTimer	321	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier sigaction, does not have a definition	sigaction	325	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	setUpTimer	325	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	argc	329	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"char"""" used in """"char **""""."	argv	329	26	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	alienType	354	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used in """"int [4]""""."	points	356	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
/home/gabriele/projects/ninvaders-0.1.1/nInvaders.h							
Declaration or Definition of render is not compatible with another declaration or definition in file aliens.c on line 156	render	41	12	MISRA12_8.3	8.3 All declarations of an object or function shall use the same names and type qualifiers		
Declaration or Definition of main is not compatible with another declaration or definition in file nInvaders.c on line 329	main	39	4	MISRA12_8.3	8.3 All declarations of an object or function shall use the same names and type qualifiers		
Object or function render, has more than one declaration	render	41	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Object or function doScoring, has more than one declaration	doScoring	46	5	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Identifier game_over, does not have a definition	game_over	43	5	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Unused macro declaration RED_ALIEN_TYPE	RED_ALIEN_TYPE	35	8	MISRA12_2.5	2.5 A project should not contain unused macro declarations		
Unused macro declaration GREEN_ALIEN_TYPE	GREEN_ALIEN_TYPE	36	8	MISRA12_2.5	2.5 A project should not contain unused macro declarations		
Unused macro declaration BLUE_ALIEN_TYPE	BLUE_ALIEN_TYPE	37	8	MISRA12_2.5	2.5 A project should not contain unused macro declarations		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
Include guards not used in file		25	1	MISRA12_4.10	Directive 4.10 Precautions shall be taken in order to prevent the contents of a header file being included more than once		
"Violation: basic numerical type """"int"""" used."	weite	49	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	level	50	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	skill_level	51	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	alienType	46	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	a	43	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	argc	39	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"char"""" used in """"char **""""."	argv	39	26	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function drawscore"	drawscore	44	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function weite, has external linkage but no visible declaration	weite	49	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function level, has external linkage but no visible declaration	level	50	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function skill_level, has external linkage but no visible declaration	skill_level	51	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Declaration or Definition of doSleep is not compatible with another declaration or definition in file globals.c on line 44	doSleep	54	12	MISRA12_8.3	8.3 All declarations of an object or function shall use the same names and type qualifiers		
Improper parameter format for function doSleep; each parameter must have a type and a name	doSleep	54	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function showUsage"	showUsage	55	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function showVersion"	showVersion	56	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function showGplShort"	showGplShort	57	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function showGpl"	showGpl	58	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
/home/gabriele/projects/ninvaders-0.1.1/player.c							
Non distinct external identifier Player conflicts with entity Player in file player.c	Player	30	15	MISRA12_5.1	5.1 External identifiers shall be distinct		
Function or object player, has external linkage but is only used in the translation unit built from player.c.	player	41	7	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Global Object """"player"""" appears to have internal linkage within player.c, so static keyword should be used."	player	41	7	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
Identifier is typographically ambiguous to Player	player	41	7	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
"Violation: basic numerical type """"int"""" used."	posX	33	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	posY	34	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	speed	35	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	missileFired	36	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	missileX	37	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	missileY	38	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function playerReset"	playerReset	46	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function player, has external linkage but no visible declaration	player	41	7	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
"Violation: basic numerical type """"int"""" used."	newPosX	69	27	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function playerMoveLeft"	playerMoveLeft	80	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerMoveRight"	playerMoveRight	96	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerTurboOn"	playerTurboOn	112	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerTurboOff"	playerTurboOff	121	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	playerHitCheck	130	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hostileShotX	130	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hostileShotY	130	41	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	fPlayerWasHit	132	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function playerLaunchMissile"	playerLaunchMissile	149	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerReloadMissile"	playerReloadMissile	163	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	playerMoveMissile	173	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function playerMoveMissile"	playerMoveMissile	173	4	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	fNoAliensLeft	175	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	alienTypeHit	176	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Non distinct external identifier playerExplode conflicts with entity playerLaunchMissile in file player.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerMoveLeft in file player.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerMoveMissile in file player.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerMoveRight in file player.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerReset in file player.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerTurboOff in file player.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerTurboOn in file player.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerHitCheck in file player.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerClear in file view.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerDisplay in file view.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerExplosionDisplay in file view.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerMissileClear in file view.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerMissileDisplay in file view.c	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerInit in file player.h	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier playerExplode conflicts with entity playerMissileInit in file player.h	playerExplode	237	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
"Keyword """"void"""" not used to denote empty parameter list for function playerExplode"	playerExplode	237	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
/home/gabriele/projects/ninvaders-0.1.1/player.h							
Non unique internal identifier playerInit conflicts with entity playerInit in file view.c on line 56	playerInit	43	12	MISRA12_5.9	5.9 Identifiers that define objects or functions with internal linkage should be unique		
Non unique internal identifier playerMissileInit conflicts with entity playerMissileInit in file view.c on line 86	playerMissileInit	46	12	MISRA12_5.9	5.9 Identifiers that define objects or functions with internal linkage should be unique		
Object or function playerClear, has more than one declaration	playerClear	45	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Object or function playerDisplay, has more than one declaration	playerDisplay	44	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Object or function playerMissileClear, has more than one declaration	playerMissileClear	48	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Object or function playerMissileDisplay, has more than one declaration	playerMissileDisplay	47	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Identifier playerInit, does not have a definition	playerInit	43	12	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Identifier playerMissileInit, does not have a definition	playerMissileInit	46	12	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
Macro used for include guard is not unique		25	1	MISRA12_4.10	Directive 4.10 Precautions shall be taken in order to prevent the contents of a header file being included more than once		
"Violation: basic numerical type """"int"""" used."	playerHitCheck	37	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	playerMoveMissile	39	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	45	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	45	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	44	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	44	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hostileShotX	37	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hostileShotY	37	41	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	48	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	48	42	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	47	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	47	44	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function playerReset"	playerReset	31	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerMoveLeft"	playerMoveLeft	33	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerMoveRight"	playerMoveRight	34	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerTurboOn"	playerTurboOn	35	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerTurboOff"	playerTurboOff	36	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerLaunchMissile"	playerLaunchMissile	38	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerMoveMissile"	playerMoveMissile	39	4	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerExplode"	playerExplode	40	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerInit"	playerInit	43	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function playerMissileInit"	playerMissileInit	46	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function playerExplosionDisplay, has more than one declaration	playerExplosionDisplay	49	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Violation: basic numerical type """"int"""" used."	x	49	39	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	49	46	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	50	36	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	50	43	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	alienType	52	26	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
/home/gabriele/projects/ninvaders-0.1.1/ufo.c							
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
"Violation: basic numerical type """"int"""" used."	fShowUfo	29	11	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function ufoReset"	ufoReset	34	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	posX	46	24	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function ufoMoveLeft"	ufoMoveLeft	58	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	ufoShowUfo	73	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function ufoShowUfo"	ufoShowUfo	73	4	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Identifier is typographically ambiguous to shotx	shotX	87	20	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
Identifier is typographically ambiguous to shoty	shotY	87	31	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
"Violation: basic numerical type """"int"""" used."	ufoHitCheck	87	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shotX	87	20	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shotY	87	31	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	fUfoWasHit	89	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
/home/gabriele/projects/ninvaders-0.1.1/ufo.h							
Non distinct external identifier Ufo conflicts with entity Ufo in file ufo.h	Ufo	30	15	MISRA12_5.1	5.1 External identifiers shall be distinct		
Object or function ufoDisplay, has more than one declaration	ufoDisplay	45	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
Function or object ufo, has external linkage but is only used in the translation unit built from ufo.c.	ufo	37	4	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
Include guards not used in file		25	1	MISRA12_4.10	Directive 4.10 Precautions shall be taken in order to prevent the contents of a header file being included more than once		
Identifier is typographically ambiguous to UFO	Ufo	30	15	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
Identifier is typographically ambiguous to UFO	Ufo	30	19	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
Identifier is typographically ambiguous to UFO	ufo	37	4	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
"Violation: basic numerical type """"int"""" used."	ufoShowUfo	40	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	ufoHitCheck	42	4	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	posX	33	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	posY	34	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	45	27	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	45	34	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shotX	42	20	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	shotY	42	31	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function ufoReset"	ufoReset	39	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function ufoShowUfo"	ufoShowUfo	40	4	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function ufoMoveLeft"	ufoMoveLeft	41	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function ufo, has external linkage but no visible declaration	ufo	37	4	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function ufoRefresh, has more than one declaration	ufoRefresh	46	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Keyword """"void"""" not used to denote empty parameter list for function ufoRefresh"	ufoRefresh	46	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function ufoClear, has more than one declaration	ufoClear	47	12	MISRA12_8.5	8.5 An external object or function shall be declared once in one and only one file		
"Violation: basic numerical type """"int"""" used."	x	47	25	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	47	32	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
/home/gabriele/projects/ninvaders-0.1.1/view.c							
Non distinct external identifier wAliens conflicts with entity wAliensMissile in file view.c	wAliens	45	8	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non distinct external identifier wPlayer conflicts with entity wPlayerMissile in file view.c	wPlayer	43	8	MISRA12_5.1	5.1 External identifiers shall be distinct		
Function or object wBattleField, has external linkage but is only used in the translation unit built from view.c.	wBattleField	39	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Function or object wEmpty, has external linkage but is only used in the translation unit built from view.c.	wEmpty	40	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Function or object wScores, has external linkage but is only used in the translation unit built from view.c.	wScores	41	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Function or object wPlayer, has external linkage but is only used in the translation unit built from view.c.	wPlayer	43	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Function or object wPlayerMissile, has external linkage but is only used in the translation unit built from view.c.	wPlayerMissile	44	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Function or object wAliens, has external linkage but is only used in the translation unit built from view.c.	wAliens	45	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
Function or object wAliensMissile, has external linkage but is only used in the translation unit built from view.c.	wAliensMissile	46	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Global Object """"wBattleField"""" appears to have internal linkage within view.c, so static keyword should be used."	wBattleField	39	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"C Global Object """"wEmpty"""" appears to have internal linkage within view.c, so static keyword should be used."	wEmpty	40	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"C Global Object """"wScores"""" appears to have internal linkage within view.c, so static keyword should be used."	wScores	41	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"C Global Object """"wPlayer"""" appears to have internal linkage within view.c, so static keyword should be used."	wPlayer	43	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"C Global Object """"wPlayerMissile"""" appears to have internal linkage within view.c, so static keyword should be used."	wPlayerMissile	44	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"C Global Object """"wAliens"""" appears to have internal linkage within view.c, so static keyword should be used."	wAliens	45	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"C Global Object """"wAliensMissile"""" appears to have internal linkage within view.c, so static keyword should be used."	wAliensMissile	46	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
header file signal.h used.	view.c	29	0	MISRA12_21.5	21.5 The standard header file <signal.h> shall not be used		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
Object or function wBattleField, has external linkage but no visible declaration	wBattleField	39	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function wEmpty, has external linkage but no visible declaration	wEmpty	40	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function wScores, has external linkage but no visible declaration	wScores	41	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function wPlayer, has external linkage but no visible declaration	wPlayer	43	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function wPlayerMissile, has external linkage but no visible declaration	wPlayerMissile	44	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function wAliens, has external linkage but no visible declaration	wAliens	45	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Object or function wAliensMissile, has external linkage but no visible declaration	wAliensMissile	46	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object wBunkers, has external linkage but is only used in the translation unit built from view.c.	wBunkers	47	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Global Object """"wBunkers"""" appears to have internal linkage within view.c, so static keyword should be used."	wBunkers	47	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
Object or function wBunkers, has external linkage but no visible declaration	wBunkers	47	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object wGameOver, has external linkage but is only used in the translation unit built from view.c.	wGameOver	48	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Global Object """"wGameOver"""" appears to have internal linkage within view.c, so static keyword should be used."	wGameOver	48	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
Object or function wGameOver, has external linkage but no visible declaration	wGameOver	48	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object wUfo, has external linkage but is only used in the translation unit built from view.c.	wUfo	49	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Global Object """"wUfo"""" appears to have internal linkage within view.c, so static keyword should be used."	wUfo	49	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
Object or function wUfo, has external linkage but no visible declaration	wUfo	49	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object wStatus, has external linkage but is only used in the translation unit built from view.c.	wStatus	50	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Global Object """"wStatus"""" appears to have internal linkage within view.c, so static keyword should be used."	wStatus	50	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
Object or function wStatus, has external linkage but no visible declaration	wStatus	50	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Function or object wTitleScreen, has external linkage but is only used in the translation unit built from view.c.	wTitleScreen	51	8	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Global Object """"wTitleScreen"""" appears to have internal linkage within view.c, so static keyword should be used."	wTitleScreen	51	8	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
Object or function wTitleScreen, has external linkage but no visible declaration	wTitleScreen	51	8	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
"Keyword """"void"""" not used to denote empty parameter list for function playerInit"	playerInit	56	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	playerInit	59	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	playerInit	60	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	68	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	68	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	playerDisplay	70	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	77	21	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	77	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	playerClear	79	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function playerMissileInit"	playerMissileInit	86	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	playerMissileInit	89	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	playerMissileInit	90	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	playerMissileInit	91	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	playerMissileInit	92	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	99	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	99	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	playerMissileDisplay	101	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	108	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	108	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	playerMissileClear	110	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	117	32	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	117	39	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"char"""" used in """"char [17]""""."	playerExplosionChars	120	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	t	121	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	s	121	14	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	playerExplosionDisplay	124	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	playerExplosionDisplay	127	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier rand, does not have a definition	rand	129	69	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	playerExplosionDisplay	129	24	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	playerExplosionDisplay	132	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	playerExplosionDisplay	133	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function aliensInit"	aliensInit	144	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Identifier newpad, does not have a definition	newpad	146	18	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Identifier wclear, does not have a definition	wclear	147	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	aliensInit	147	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	154	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	154	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	wid	154	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hgt	154	46	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	aliensDisplay	156	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	163	21	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	163	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	wid	163	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hgt	163	44	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	aliensClear	165	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function aliensMissileInit"	aliensMissileInit	172	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	aliensMissileInit	175	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier wattrset, does not have a definition	wattrset	176	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	aliensMissileInit	176	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier waddch, does not have a definition	waddch	177	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	aliensMissileInit	177	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	184	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	184	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	aliensMissileDisplay	186	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	193	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	193	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	aliensMissileClear	195	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Non unique external identifier level conflicts with entity level in file nInvaders.h on line 50	level	202	23	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
"Violation: basic numerical type """"int"""" used."	level	202	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used in """"int *""""."	pAliens	202	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	frame	204	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	k	205	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	row	205	14	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	c	206	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	alienType	207	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"char"""" used in """"char [2][9][4]""""."	ships	208	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used in """"int [9]""""."	colors	212	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	aliensRefresh	214	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	aliensRefresh	215	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	aliensRefresh	226	40	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	aliensRefresh	227	40	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	aliensRefresh	228	40	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	aliensRefresh	229	40	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier waddnstr, does not have a definition	waddnstr	234	40	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
"Keyword """"void"""" not used to denote empty parameter list for function bunkersInit"	bunkersInit	249	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	bunkersInit	252	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used in """"int *""""."	pBunker	260	25	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	l	262	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	k	262	15	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	bunkersDisplay	263	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	bunkersDisplay	264	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Comment appears to contain code in or near k	k	267	80	MISRA12_4.4	"Directive 4.4 Sections of code should not be """"commented out"""""		
Discarded Return Values	bunkersDisplay	268	32	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	bunkersDisplay	270	32	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	bunkersDisplay	275	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function bunkersClear"	bunkersClear	282	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	bunkersClear	284	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	291	29	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	291	36	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	bunkersClearElement	293	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function ufoRefresh"	ufoRefresh	300	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Non unique external identifier ufo conflicts with entity ufo in file ufo.h on line 37	ufo	302	13	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
"Violation: basic numerical type """"char"""" used in """"char [4][6]""""."	ufo	302	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	frame	303	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	ufoRefresh	305	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	ufoRefresh	306	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function ufoInit"	ufoInit	316	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	ufoInit	319	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	ufoInit	320	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	327	20	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	327	27	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	ufoDisplay	329	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Violation: basic numerical type """"int"""" used."	x	336	18	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	336	25	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	ufoClear	338	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function gameOverInit"	gameOverInit	345	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	gameOverInit	349	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	gameOverInit	350	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function gameOverDisplay"	gameOverDisplay	369	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	x	371	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	372	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	gameOverDisplay	373	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier wrefresh, does not have a definition	wrefresh	374	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	gameOverDisplay	374	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function titleScreenInit"	titleScreenInit	381	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	titleScreenInit	384	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function titleScreenDisplay"	titleScreenDisplay	391	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	frame	393	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	394	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	394	15	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Identifier is typographically ambiguous to l	i	395	12	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
"Violation: basic numerical type """"int"""" used."	i	395	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Non unique external identifier wAliens conflicts with entity wAliens in file view.c on line 45	wAliens	397	16	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
"Identifier """"wAliens"""" possibly hiding outer definition from line 45"	wAliens	397	16	MISRA12_5.3	5.3 An identifier declared in an inner scope shall not hide an identifier declared in an outer scope		
Non unique external identifier ufo conflicts with entity ufo in file ufo.h on line 37	ufo	399	13	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
"Violation: basic numerical type """"char"""" used in """"char [4][6]""""."	ufo	399	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Non unique external identifier aliens conflicts with entity aliens in file aliens.h on line 41	aliens	400	13	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
"Violation: basic numerical type """"char"""" used in """"char [2][9][4]""""."	aliens	400	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Non unique external identifier score conflicts with entity score in file nInvaders.c on line 36	score	404	12	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
"Violation: basic numerical type """"int"""" used in """"int [3]""""."	score	404	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used in """"int [9]""""."	colors	405	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"char"""" used in """"char [12]""""."	buffer	406	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Identifier is typographically ambiguous to alienType	alien_type	407	19	MISRA12_4.5	Directive 4.5 Identifiers in the same name space with overlapping visibility should be typographically unambiguous		
"Violation: basic numerical type """"int"""" used."	alien_type	407	19	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	titleScreenDisplay	410	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	411	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	419	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier snprintf, does not have a definition	snprintf	420	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	titleScreenDisplay	420	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	421	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	432	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	433	16	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	438	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	439	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	444	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	448	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	452	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	454	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	titleScreenDisplay	456	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Non distinct external identifier titleScreenClear conflicts with entity titleScreenDisplay in file view.c	titleScreenClear	463	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
"Keyword """"void"""" not used to denote empty parameter list for function titleScreenClear"	titleScreenClear	463	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Function or object statusInit, has external linkage but is only used in the translation unit built from view.c.	statusInit	472	5	MISRA12_8.7	8.7 Functions and objects should not be defined with external linkage if they are referenced in only one translation unit		
"C Function """"statusInit"""" appears to have internal linkage within view.c, so static keyword should be used."	statusInit	472	5	MISRA12_8.8	8.8 The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage		
"Keyword """"void"""" not used to denote empty parameter list for function statusInit"	statusInit	472	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Object or function statusInit, has external linkage but no visible declaration	statusInit	472	5	MISRA12_8.4	8.4 A compatible declaration shall be visible when an object or function with external linkage is defined		
Discarded Return Values	statusInit	475	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Non distinct external identifier statusDisplay conflicts with entity statusInit in file view.c	statusDisplay	482	5	MISRA12_5.1	5.1 External identifiers shall be distinct		
Non unique external identifier level conflicts with entity level in file nInvaders.h on line 50	level	482	23	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
Non unique external identifier lives conflicts with entity lives in file nInvaders.c on line 35	lives	482	45	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
Non unique external identifier score conflicts with entity score in file nInvaders.c on line 36	score	482	34	MISRA12_5.8	5.8 Identifiers that define objects or functions with external linkage shall be unique		
"Violation: basic numerical type """"int"""" used."	level	482	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	score	482	34	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	lives	482	45	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	t	484	12	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	xOffset	484	15	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"char"""" used in """"char [55]""""."	strStatus	485	13	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Identifier sprintf, does not have a definition	sprintf	494	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	statusDisplay	494	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	statusDisplay	496	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	statusDisplay	497	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	statusDisplay	505	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function battleFieldInit"	battleFieldInit	514	12	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Discarded Return Values	battleFieldInit	517	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier newwin, does not have a definition	newwin	519	23	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	battleFieldInit	520	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier mvwin, does not have a definition	mvwin	521	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	battleFieldInit	521	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function battleFieldClear"	battleFieldClear	528	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Identifier copywin, does not have a definition	copywin	530	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	battleFieldClear	530	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
"Keyword """"void"""" not used to denote empty parameter list for function refreshScreen"	refreshScreen	537	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Identifier wredrawln, does not have a definition	wredrawln	539	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	refreshScreen	540	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Unused unused parameter sig	sig	548	23	MISRA12_2.7	2.7 There should be no unused parameters in functions		
"Violation: basic numerical type """"int"""" used."	sig	548	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
Discarded Return Values	finish	550	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
cstdlib function exit used in file view.c	exit	551	8	MISRA12_21.8	21.8 The library functions abort, exit, getenv and system of <stdlib.h> shall not be used		
"Keyword """"void"""" not used to denote empty parameter list for function graphicEngineInit"	graphicEngineInit	558	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
Identifier signal, does not have a definition	signal	560	15	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Identifier initscr, does not have a definition	initscr	561	15	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Identifier keypad, does not have a definition	keypad	562	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	graphicEngineInit	562	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier nonl, does not have a definition	nonl	563	15	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Identifier cbreak, does not have a definition	cbreak	564	15	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Identifier noecho, does not have a definition	noecho	565	15	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Identifier start_color, does not have a definition	start_color	566	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	graphicEngineInit	566	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Identifier init_pair, does not have a definition	init_pair	567	8	MISRA12_8.6	8.6 ( Strict | Special ) An identifier with external linkage shall have exactly one external definition		
Discarded Return Values	graphicEngineInit	567	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	graphicEngineInit	568	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	graphicEngineInit	569	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	graphicEngineInit	570	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	graphicEngineInit	571	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	graphicEngineInit	572	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
Discarded Return Values	graphicEngineInit	573	8	MISRA12_17.7	17.7 The value returned by a function having non-void return type shall be used		
/home/gabriele/projects/ninvaders-0.1.1/view.h							
header file signal.h used.	view.h	27	0	MISRA12_21.5	21.5 The standard header file <signal.h> shall not be used		
Character sequence /* or // used in a comment		1	0	MISRA12_3.1	3.1 The character sequences /* and // shall not be used within a comment		
Include guards not used in file		25	1	MISRA12_4.10	Directive 4.10 Precautions shall be taken in order to prevent the contents of a header file being included more than once		
"Keyword """"void"""" not used to denote empty parameter list for function graphicEngineInit"	graphicEngineInit	52	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	x	54	21	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	54	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	wid	54	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hgt	54	44	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	55	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	55	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	wid	55	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	hgt	55	46	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	56	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	56	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	57	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	57	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	level	58	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used in """"int *""""."	pAliens	58	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function battleFieldClear"	battleFieldClear	59	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function bunkersClear"	bunkersClear	60	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	x	61	29	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	61	36	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used in """"int *""""."	pBunker	62	25	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function gameOverDisplay"	gameOverDisplay	63	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	x	64	21	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	64	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	65	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	65	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	66	32	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	66	39	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	67	28	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	67	35	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	68	30	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	68	37	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function titleScreenClear"	titleScreenClear	69	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Keyword """"void"""" not used to denote empty parameter list for function titleScreenDisplay"	titleScreenDisplay	70	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	x	71	18	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	71	25	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	x	72	20	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	y	72	27	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function ufoRefresh"	ufoRefresh	73	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
"Violation: basic numerical type """"int"""" used."	level	75	23	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	score	75	34	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Violation: basic numerical type """"int"""" used."	lives	75	45	MISRA12_4.6	Directive 4.6 typedefs that indicate size and signedness should be used in place of the basic numerical types		
"Keyword """"void"""" not used to denote empty parameter list for function refreshScreen"	refreshScreen	76	5	MISRA12_8.2	8.2 Function types shall be in prototype form with named parameters		
